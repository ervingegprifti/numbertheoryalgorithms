<resources>
    <!-- Common -->
    <string name="app_name">Number Theory Algorithms</string>
    <string name="app_title">Number Theory</string>
    <string name="separator_comma" translatable="false">,</string>
    <string name="action_settings">Settings</string>
    <string name="action_about">About</string>
    <string name="big_integer_mod">mod</string>
    <string name="expand_result">expand</string>
    <string name="clipboard_copy">copy</string>
    <string name="clipboard_paste">paste</string>
    <string name="clipboard_clear">clear</string>
    <string name="empty" />
    <string name="documentation">doc&#8230;</string>
    <string name="yes">YES</string>
    <string name="no">NO</string>
    <string name="please_wait">Please wait while this might take some time.</string>
    <string name="result">result</string>
    <string name="run_example_1">E₁</string>
    <string name="run_example_2">E₂</string>
    <string name="run_example_3">E₃</string>
    <string name="run_example_4">E₄</string>
    <string name="run_example_5">E₅</string>
    <string name="run_example_6">E₆</string>
    <string name="back">back</string>
    <string name="canceling">Canceling&#8230;</string>
    <string name="canceled">Canceled</string>
    <string name="label_a" translatable="false">a</string>
    <string name="label_b" translatable="false">b</string>
    <string name="label_c" translatable="false">c</string>
    <string name="label_d" translatable="false">d</string>
    <string name="label_e" translatable="false">e</string>
    <string name="label_f" translatable="false">f</string>
    <string name="label_p" translatable="false">p</string>
    <string name="label_m" translatable="false">m</string>
    <string name="label_n" translatable="false">n</string>
    <string name="result_example_1">result example no 1</string>
    <string name="result_example_2">result example no 2</string>
    <string name="result_example_3">result example no 3</string>
    <string name="result_example_4">result example no 4</string>
    <string name="result_example_5">result example no 5</string>
    <string name="result_example_6">result example no 6</string>
    <!-- Common -->






    <!-- Fragment Calculator -->
    <!--https://stackoverflow.com/questions/8515365/are-there-other-whitespace-codes-like-nbsp-for-half-spaces-em-spaces-en-space-->
    <!--hair space : &#8202; or &hairsp;-->
    <string name="calculator_add" translatable="false">a + b</string>
    <string name="calculator_subtract" translatable="false">a - b</string>
    <string name="calculator_multiply" translatable="false">a · b</string>
    <string name="calculator_divide" translatable="false">a / b</string>
    <string name="calculator_power" translatable="false">aᵇ</string>
    <string name="calculator_root" translatable="false">ᵇ&#8730;a</string>
    <string name="calculator_gcd" translatable="false">gcd(|a|, |b|)</string>
    <string name="calculator_lcm" translatable="false">lcm(a, b)</string>
    <string name="calculator_mod" translatable="false">a (mod b)</string>
    <string name="calculator_mod_inverse" translatable="false">a⁻¹ (mod b)</string>
    <string name="calculator_is_a_prime">is a prime?</string>
    <string name="calculator_euler_phi">euler\'s <i>ϕ</i>(a)</string>
    <string name="calculator_factorial">factorial a!</string>
    <string name="calculator_next_prime_to_a">next prime</string>
    <string name="calculator_next_twin_prime_to_a">next twin prime</string>
    <!--Calculator operations label-->
    <string name="calculator_addition_label_result1">a + b</string>
    <string name="calculator_subtraction_label_result1">a - b</string>
    <string name="calculator_multiplication_label_result1">a · b</string>
    <string name="calculator_division_label_result1">a / b quotient</string>
    <string name="calculator_division_label_result2">a / b remainder</string>
    <string name="calculator_power_label_result1">aᵇ</string>
    <string name="calculator_root_label_result1">root(a, b)</string>
    <string name="calculator_root_label_result2">a - root(a, b)ᵇ</string>
    <string name="calculator_gcd_label_result1">gcd(|a|, |b|)</string>
    <string name="calculator_lcm_label_result1">lcm(a, b)</string>
    <string name="calculator_mod_label_result1">a (mod b)</string>
    <string name="calculator_mod_inverse_label_result1">a⁻¹ (mod b)</string>
    <string name="calculator_a_is_prime_yes">yes</string>
    <string name="calculator_euler_phi_of_a">euler\'s ϕ(a)</string>
    <string name="calculator_a_factorial">a!</string>
    <string name="calculator_a_is_prime_no">no</string>
    <string name="calculator_next_prime_label_result1">next prime to a</string>
    <string name="calculator_next_twin_prime_label_result1">next twin prime to a</string>
    <string name="calculator_next_twin_prime_label_result2">next twin prime to a</string>
    <!--Fragment tab calculator menu string items-->
    <!--https://en.wikipedia.org/wiki/RSA_Factoring_Challenge-->
    <string name="menu_calculator_documentation">Documentation</string>
    <string name="rsa_100" translatable="false">E₁ ● RSA-100</string>
    <string name="rsa_576" translatable="false">E₂ ● RSA-576</string>
    <string name="rsa_768" translatable="false">E₃ ● RSA-768</string>
    <string name="rsa_1536" translatable="false">E₄ ● RSA-1536</string>
    <string name="rsa_2048" translatable="false">E₅ ● RSA-2048</string>
    <string name="more_rsa">More RSA examples&#8230;</string>
    <!-- Fragment Calculator -->




    <!-- Progress Dialog -->
    <string name="progress_dialog_cancel">Cancel</string>
    <string name="progress_dialog_writing_results">Writing results…</string>
    <!-- Progress Dialog -->




    <!-- Documentation Dialog -->
    <string name="documentation_problem">There was a problem loading the documentation.%s</string>
    <string name="pdf_viewer_not_supported">PDF viewing is not supported on this version of Android.</string>
    <!-- Documentation Dialog -->




    <!-- Algorithms -->
    <string name="binary_quadratic_form">Binary Quadratic Form</string>
    <string name="binary_quadratic_form_description">Solve for <i><b>x,y</b></i> such as <i><b>bxy+dx+ey=f</b></i> where <i><b>b,d,e,f,x,y ∊ ℤ</b></i> with <i><b>b ≠ 0</b></i>.</string>
    <string name="euclidean_algorithm">Euclidean Algorithm</string>
    <string name="euclidean_algorithm_description">Compute the Greatest Common Divisor (GCD) of two numbers <i><b>a</b></i> and <i><b>b</b></i>. The GCD is the largest number that divides both <i><b>a</b></i> and <i><b>b</b></i> without leaving a remainder.</string>
    <string name="extended_euclidean_algorithm">Extended Euclidean Algorithm</string>
    <string name="extended_euclidean_algorithm_description">Solve for <i><b>x,y</b></i> such as <i><b>ax+by = gcd(a, b)</b></i> where <i><b>a,b ∊ ℕ</b></i>, <i><b>x,y ∊ ℤ</b></i>.</string>
    <string name="linear_diophantine_equation_in_two_variables">Linear Diophantine Equation In Two Variables</string>
    <string name="linear_diophantine_equation_in_two_variables_description">Solve for <i><b>x,y</b></i> such as <i><b>ax+by=c</b></i> where <i><b>a,b,c,x,y ∊ ℤ</b></i> with <i><b>a,b ≠ 0</b></i>.</string>
    <string name="linear_congruence_in_one_variable">Linear Congruence In One Variable</string>
    <string name="linear_congruence_in_one_variable_description">Solve for <i><b>x</b></i>, a congruence of the form <i><b>ax ≡ b (mod m)</b></i> where <i><b>a,b,x ∊ ℤ</b></i>, <i><b>m ∊ ℕ</b></i>.</string>
    <string name="linear_congruence_in_two_variables">Linear Congruence In Two Variables</string>
    <string name="linear_congruence_in_two_variables_description">Solve for <i><b>x,y</b></i> a congruence of the form <i><b>ax+by ≡ c (mod m)</b></i> where <i><b>a,b,c,x,y ∊ ℤ</b></i>, <i><b>m ∊ ℕ</b></i>.</string>
    <string name="tonelli_shanks_algorithm">Tonelli-Shanks Algorithm</string>
    <string name="tonelli_shanks_algorithm_description">Solve for <i><b>x</b></i> a congruence of the form <i><b>x² ≡ a (mod p)</b></i>, where <i><b>p ∊ PRIMES</b></i>.</string>
    <string name="mod_factors">Mod Factors</string>
    <string name="mod_factors_description">Find <i><b>n ≡ bc (mod a)</b></i> where <i><b>(ax+c)(ay+b) = a(axy+bx+cy)+bc = n</b></i>.</string>
    <string name="primes_list">Primes List</string>
    <string name="primes_list_description">List of primes ordered in columns.</string>
    <!-- Algorithms -->



    <!-- Fragment Binary Quadratic Form -->
    <string name="binary_quadratic_form_title">bxy+dx+ey=f</string>
    <string name="binary_quadratic_form_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tSolve for x,y</string>
    <string name="binary_quadratic_form_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tSolve for x,y such as bxy+dx+ey=f</string>
    <string name="binary_quadratic_form_m_minus">- m</string>
    <string name="binary_quadratic_form_m_hint">m</string>
    <string name="binary_quadratic_form_m_plus">m +</string>
    <string name="binary_quadratic_form_r_minus">- r</string>
    <string name="binary_quadratic_form_r_hint">r</string>
    <string name="binary_quadratic_form_r_plus">r +</string>
    <string name="binary_quadratic_form_result_fxy">F(x,y)</string>
    <string name="binary_quadratic_form_result_fxy_f_mod_m_r">F(x,y) + f (mod m) = r</string>
    <string name="binary_quadratic_form_menu_example_1">E₁ ● 8xy + 3x + 3y = 88</string>
    <string name="binary_quadratic_form_menu_example_2">E₂ ● 16xy + 7x + 3y = 113</string>
    <string name="binary_quadratic_form_menu_example_3">E₃ ● 8xy + 7x + 7y = 83</string>
    <string name="binary_quadratic_form_menu_example_4">E₄ ● 16xy + 15x + 11y = 104</string>
    <string name="binary_quadratic_form_menu_example_5">E₅ ● 8xy + 3x + 5y = 14</string>
    <string name="binary_quadratic_form_menu_solve_configurations">Solve Configurations</string>
    <string name="binary_quadratic_form_menu_include_trivial_solutions">Trivial solutions</string>
    <string name="binary_quadratic_form_menu_include_only_positive_solutions">Only positive solutions</string>
    <string name="binary_quadratic_form_menu_include_only_negative_solutions">Only negative solutions</string>
    <!-- Fragment Binary Quadratic Form -->




    <!-- Fragment Euclidean Algorithm -->
    <string name="euclidean_algorithm_title">EUCLIDEAN ALGORITHM</string>
    <string name="euclidean_algorithm_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tGCD(a, b)</string>
    <string name="euclidean_algorithm_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tCompute the GCD of a and b</string>
    <string name="euclidean_algorithm_example_1_a">9</string>
    <string name="euclidean_algorithm_example_1_b">33</string>
    <string name="euclidean_algorithm_example_2_a">33</string>
    <string name="euclidean_algorithm_example_2_b">9</string>
    <string name="euclidean_algorithm_example_3_a">9</string>
    <string name="euclidean_algorithm_example_3_b">18</string>
    <string name="euclidean_algorithm_example_4_a">18</string>
    <string name="euclidean_algorithm_example_4_b">9</string>
    <string name="euclidean_algorithm_menu_example_1">E₁ ● GCD(9, 33)</string>
    <string name="euclidean_algorithm_menu_example_2">E₂ ● GCD(33, 9)</string>
    <string name="euclidean_algorithm_menu_example_3">E₃ ● GCD(9, 18)</string>
    <string name="euclidean_algorithm_menu_example_4">E₄ ● GCD(18, 9)</string>
    <!-- Fragment Euclidean Algorithm -->




    <!-- Fragment Extended Euclidean Algorithm -->
    <string name="extended_euclidean_algorithm_title">EXTENDED EUCLIDEAN ALGORITHM</string>
    <string name="extended_euclidean_algorithm_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tax+by=GCD(a, b)</string>
    <string name="extended_euclidean_algorithm_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tSolve for x,y such as ax+by=GCD(a, b)</string>
    <string name="extended_euclidean_algorithm_example_1_a">7</string>
    <string name="extended_euclidean_algorithm_example_1_b">21</string>
    <string name="extended_euclidean_algorithm_example_2_a">7</string>
    <string name="extended_euclidean_algorithm_example_2_b">32</string>
    <string name="extended_euclidean_algorithm_example_3_a">6</string>
    <string name="extended_euclidean_algorithm_example_3_b">10</string>
    <string name="extended_euclidean_algorithm_menu_example_1">E₁ ● 7x + 21y = GCD(7, 21) = 7</string>
    <string name="extended_euclidean_algorithm_menu_example_2">E₂ ● 7x + 32y = GCD(7, 32) = 1</string>
    <string name="extended_euclidean_algorithm_menu_example_3">E₃ ● 6x + 10y = GCD(6, 10) = 2</string>
    <!-- Fragment Extended Euclidean Algorithm -->




    <!-- Fragment Linear Diophantine Equation In Two Variables -->
    <string name="linear_diophantine_equation_in_two_variables_title">LINEAR EQUATION IN TWO VARIABLES</string>
    <string name="linear_diophantine_equation_in_two_variables_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tax+by=c</string>
    <string name="linear_diophantine_equation_in_two_variables_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tSolve for x,y such as ax+by=c</string>
    <string name="linear_diophantine_equation_in_two_variables_example_1_a">7</string>
    <string name="linear_diophantine_equation_in_two_variables_example_1_b">-21</string>
    <string name="linear_diophantine_equation_in_two_variables_example_1_c">10</string>
    <string name="linear_diophantine_equation_in_two_variables_example_2_a">7</string>
    <string name="linear_diophantine_equation_in_two_variables_example_2_b">-32</string>
    <string name="linear_diophantine_equation_in_two_variables_example_2_c">15</string>
    <string name="linear_diophantine_equation_in_two_variables_example_3_a">6</string>
    <string name="linear_diophantine_equation_in_two_variables_example_3_b">-10</string>
    <string name="linear_diophantine_equation_in_two_variables_example_3_c">4</string>
    <string name="linear_diophantine_equation_in_two_variables_menu_example_1">E₁ ● 7x - 21y = 10</string>
    <string name="linear_diophantine_equation_in_two_variables_menu_example_2">E₂ ● 7x - 32y = 15</string>
    <string name="linear_diophantine_equation_in_two_variables_menu_example_3">E₃ ● 6x - 10y = 4</string>
    <!-- Fragment Linear Diophantine Equation In Two Variables  -->




    <!-- Fragment Linear Congruence In One Variable -->
    <string name="linear_congruence_in_one_variable_title">LINEAR CONGRUENCE in 1v</string>
    <string name="linear_congruence_in_one_variable_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tax ≡ b (mod m)</string>
    <string name="linear_congruence_in_one_variable_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tSolve for x such as ax ≡ b (mod m)</string>
    <string name="linear_congruence_in_one_variable_example_1_a">7</string>
    <string name="linear_congruence_in_one_variable_example_1_b">10</string>
    <string name="linear_congruence_in_one_variable_example_1_m">21</string>
    <string name="linear_congruence_in_one_variable_example_2_a">7</string>
    <string name="linear_congruence_in_one_variable_example_2_b">15</string>
    <string name="linear_congruence_in_one_variable_example_2_m">32</string>
    <string name="linear_congruence_in_one_variable_example_3_a">6</string>
    <string name="linear_congruence_in_one_variable_example_3_b">4</string>
    <string name="linear_congruence_in_one_variable_example_3_m">10</string>
    <string name="linear_congruence_in_one_variable_menu_example_1">E₁ ● 7x ≡ 10 (mod 21)</string>
    <string name="linear_congruence_in_one_variable_menu_example_2">E₂ ● 7x ≡ 15 (mod 32)</string>
    <string name="linear_congruence_in_one_variable_menu_example_3">E₃ ● 6x ≡ 4 (mod 10)</string>
    <!-- Fragment Linear Congruence In One Variable -->




    <!-- Fragment Linear Congruence In Two Variables -->
    <string name="linear_congruence_in_two_variables_title">ax+by ≡ c (mod m)</string>
    <string name="linear_congruence_in_two_variables_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tSolve for x,y</string>
    <string name="linear_congruence_in_two_variables_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tSolve for x,y such as ax+by ≡ c (mod m)</string>
    <string name="linear_congruence_in_two_variables_example_1_a">4</string>
    <string name="linear_congruence_in_two_variables_example_1_b">20</string>
    <string name="linear_congruence_in_two_variables_example_1_c">10</string>
    <string name="linear_congruence_in_two_variables_example_1_m">16</string>
    <string name="linear_congruence_in_two_variables_example_2_a">4</string>
    <string name="linear_congruence_in_two_variables_example_2_b">20</string>
    <string name="linear_congruence_in_two_variables_example_2_c">10</string>
    <string name="linear_congruence_in_two_variables_example_2_m">15</string>
    <string name="linear_congruence_in_two_variables_example_3_a">4</string>
    <string name="linear_congruence_in_two_variables_example_3_b">20</string>
    <string name="linear_congruence_in_two_variables_example_3_c">10</string>
    <string name="linear_congruence_in_two_variables_example_3_m">14</string>
    <string name="linear_congruence_in_two_variables_menu_example_1">E₁ ● 4x+20y ≡ 10 (mod 16)</string>
    <string name="linear_congruence_in_two_variables_menu_example_2">E₂ ● 4x+20y ≡ 10 (mod 15)</string>
    <string name="linear_congruence_in_two_variables_menu_example_3">E₃ ● 4x+20y ≡ 10 (mod 14)</string>
    <!-- Fragment Linear Congruence In Two Variables -->




    <!-- Fragment Tonelli Shanks Algorithm -->
    <string name="tonelli_shanks_algorithm_title">TONELLI SHANKS ALGORITHM</string>
    <string name="tonelli_shanks_algorithm_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tx² ≡ a (mod p)</string>
    <string name="tonelli_shanks_algorithm_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tSolve for x such as x² ≡ a (mod p)</string>
    <string name="tonelli_shanks_algorithm_example_1_a">2</string>
    <string name="tonelli_shanks_algorithm_example_1_p">23</string>
    <string name="tonelli_shanks_algorithm_example_2_a">5</string>
    <string name="tonelli_shanks_algorithm_example_2_p">23</string>
    <string name="tonelli_shanks_algorithm_example_3_a">2</string>
    <string name="tonelli_shanks_algorithm_example_3_p">360027784083079948259017962255826129</string>
    <string name="tonelli_shanks_algorithm_menu_example_1">E₁ ● x² ≡ 2 (mod 23)</string>
    <string name="tonelli_shanks_algorithm_menu_example_2">E₂ ● x² ≡ 5 (mod 23)</string>
    <string name="tonelli_shanks_algorithm_menu_example_3">E₃ ● x² ≡ 2 (mod 3600…)</string>
    <!-- Fragment Tonelli Shanks -->




    <!-- Fragment Mod Factors -->
    <string name="mod_factors_title">MOD FACTORS</string>
    <string name="mod_factors_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tMod factors</string>
    <string name="mod_factors_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tMod factors</string>
    <string name="mod_factors_count_run_short"><strong><font color='#E3E1D7'>●</font></strong>\tCount</string>
    <string name="mod_factors_count_run_long"><strong><font color='#E3E1D7'>●</font></strong>\tCount</string>
    <string name="mod_factors_example_1_n">551</string>
    <string name="mod_factors_example_1_a">8</string>
    <string name="mod_factors_example_2_n">551</string>
    <string name="mod_factors_example_2_a">16</string>
    <string name="mod_factors_example_3_n">551</string>
    <string name="mod_factors_example_3_a">32</string>
    <string name="mod_factors_example_4_n">551</string>
    <string name="mod_factors_example_4_a">6</string>
    <string name="mod_factors_example_5_n">551</string>
    <string name="mod_factors_example_5_a">36</string>
    <string name="mod_factors_example_6_n">551</string>
    <string name="mod_factors_example_6_a">216</string>
    <string name="mod_factors_menu_example_1">E₁ ● 551, 8</string>
    <string name="mod_factors_menu_example_2">E₂ ● 551, 16</string>
    <string name="mod_factors_menu_example_3">E₃ ● 551, 32</string>
    <string name="mod_factors_menu_example_4">E₄ ● 551, 6</string>
    <string name="mod_factors_menu_example_5">E₅ ● 551, 36</string>
    <string name="mod_factors_menu_example_6">E₆ ● 551, 216</string>
    <!-- Fragment Mod Factors -->




    <!-- Fragment Primes List -->
    <string name="primes_list_title">PRIMES LIST</string>
    <string name="primes_list_no_of_columns_minus" translatable="false">-</string>
    <string name="primes_list_columns" translatable="true">columns</string>
    <string name="primes_list_numbers" translatable="true">numbers</string>
    <string name="primes_list_no_of_columns_plus" translatable="false">+</string>
    <string name="primes_list_numbers_minus" translatable="false">- 1k</string>
    <string name="primes_list_numbers_100" translatable="false">1000</string>
    <string name="primes_list_columns_6" translatable="false">6</string>
    <string name="primes_list_numbers_plus" translatable="false">1k +</string>
    <!-- Fragment Primes List -->
</resources>
